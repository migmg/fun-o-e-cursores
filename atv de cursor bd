1) CREATE FUNCTION total_livros_por_genero(nome_genero_param VARCHAR(255))
RETURNS INT
BEGIN
    DECLARE total INT;
    DECLARE done INT DEFAULT 0;
    DECLARE livro_id INT;
    DECLARE genero_nome VARCHAR(255);

    DECLARE cur CURSOR FOR
        SELECT L.id, G.nome_genero
        FROM Livro L
        JOIN Genero G ON L.id_genero = G.id;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    SET total = 0;

    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO livro_id, genero_nome;
        IF done THEN
            LEAVE read_loop;
        END IF;

        IF genero_nome = nome_genero_param THEN
            SET total = total + 1;
        END IF;
    END LOOP;

    CLOSE cur;

    RETURN total;
END;

//

DELIMITER ;

2) DELIMITER //

CREATE FUNCTION listar_livros_por_autor(
    primeiro_nome_param VARCHAR(255),
    ultimo_nome_param VARCHAR(255)
)
RETURNS TEXT
BEGIN
    DECLARE lista_livros TEXT;
    DECLARE done INT DEFAULT 0;
    DECLARE livro_titulo VARCHAR(255);

    DECLARE cur CURSOR FOR
        SELECT L.titulo
        FROM Livro L
        WHERE A.primeiro_nome = primeiro_nome_param AND A.ultimo_nome = ultimo_nome_param;

    SET lista_livros = '';

    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO livro_titulo;
        IF done THEN
            LEAVE read_loop;
        END IF;

        SET lista_livros = CONCAT(lista_livros, livro_titulo, '\n');
    END LOOP;

    CLOSE cur;

    RETURN lista_livros;
END;

//

DELIMITER ;


3) DELIMITER //

CREATE FUNCTION atualizar_resumos()
RETURNS INT
BEGIN
    DECLARE done INT DEFAULT 0;
    DECLARE livro_id INT;
    DECLARE livro_resumo TEXT;

    DECLARE cur CURSOR FOR
        SELECT id, resumo
        FROM Livro;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    OPEN cur;

    update_loop: LOOP
        FETCH cur INTO livro_id, livro_resumo;
        IF done THEN
            LEAVE update_loop;
        END IF;

       
        SET livro_resumo = CONCAT(livro_resumo, ' um excelente livro!');

     
        UPDATE Livro
        SET resumo = livro_resumo
        WHERE id = livro_id;
    END LOOP;

    CLOSE cur;

    RETURN 1; 
END;

//

DELIMITER ;


4) DELIMITER //

CREATE FUNCTION media_livros_por_editora()
RETURNS DECIMAL(10, 2)
BEGIN
    DECLARE done INT DEFAULT 0;
    DECLARE total_livros INT;
    DECLARE total_editoras INT;
    DECLARE editora_id INT;
    DECLARE media DECIMAL(10, 2);

    -- Variáveis para cálculo
    SET total_livros = 0;

    SET media = 0;

    DECLARE cur CURSOR FOR
        SELECT E.id
        FROM Editora E;

    OPEN cur;

    main_loop: LOOP
        FETCH cur INTO editora_id;
        IF done THEN
            LEAVE main_loop;
        END IF;

    
        SELECT COUNT(*) INTO total_livros
        FROM Livro
        WHERE id_editora = editora_id;

      
        SET total_editoras = total_editoras + 1;
        SET media = media + total_livros;
    END LOOP;

    CLOSE cur;

    IF total_editoras > 0 THEN
        SET media = media / total_editoras;
    END IF;

    RETURN media;
END;

//

DELIMITER ;

5) DELIMITER //

CREATE FUNCTION autores_sem_livros()
RETURNS TEXT
BEGIN
    DECLARE done INT DEFAULT 0;
    DECLARE autor_id INT;
    DECLARE lista_autores TEXT;

    SET lista_autores = '';

    DECLARE cur CURSOR FOR
        SELECT A.id
        FROM Autor A
        WHERE A.id NOT IN (
            SELECT DISTINCT LA.id_autor
            FROM Livro_Autor LA
        );

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    OPEN cur;

    main_loop: LOOP
        FETCH cur INTO autor_id;
        IF done THEN
            LEAVE main_loop;
        END IF;

        SELECT CONCAT(A.primeiro_nome, ' ', A.ultimo_nome) INTO lista_autores
        FROM Autor A
        WHERE A.id = autor_id;

        SET lista_autores = CONCAT(lista_autores, '\n');

    END LOOP;

    CLOSE cur;

    RETURN lista_autores;
END;

//

DELIMITER ;



























